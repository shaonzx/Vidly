@model IEnumerable<Vidly.Models.Customer>
@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>

@Html.ActionLink("New Customer", "New", "Customers", new { @class = "btn btn-success" })
<br>

@*No customer list supplied during api call
    @if (Model.Count() == 0)*@
@if(false)
{
    <text>We don't have any customers yet.</text>
}
else
{
    <table id="customers" class="table table-bordered table-hover">
        <thead>
        <tr>
            <th>Customer</th>
            <th>Membership Type</th>
            <th>Discount Rate</th>
            <th>Delete</th>
        </tr>
        </thead>
        <tbody>
        @*following block is not needed when getting data through api call*@
        @*@foreach (var customer in Model)
        {
            <tr>
                <td> @Html.ActionLink(customer.Name, "Edit", "Customers", new {id = customer.Id}, null) </td>
                <td> @customer.MembershipType.Name </td>
                <td> @customer.MembershipType.DiscountRate % </td>
                <td>
                    <button data-customer-id="@customer.Id" class="btn-link js-delete">Delete</button>
                </td>
            </tr>
        }*@
        </tbody>
    </table>
}

@section scripts
{
    <script>
        $(document).ready(function() {

            //gets the entire dataset as markup (expensive for large data)
            //$("#customers").DataTable();

            // following gets the dataset through api call
            var table = $("#customers").dataTable({
                ajax: {
                    url: "/api/customers",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "name",
                        render: function(data, type, customer) {
                            return "<a href='/customers/edit/" + customer.id + "'>" + customer.name + "</a>";
                        }
                    },
                    {
                        data: "membershipType.name"
                    },
                    {
                        data: "membershipType.discountRate"
                    },
                    {
                        data: "id",
                        render: function(data) {
                            return "<button class='btn-link js-delete' data-customer-id=" + data + ">Delete</button>";
                        }
                    }]

            });

            $("#customers").on("click",
                ".js-delete",
                function() {

                    var button = $(this);

                    bootbox.confirm("Are you sure you want to delete this customer?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/customers/" + button.attr("data-customer-id"),
                                    method: "DELETE",
                                    success: function () {

                                        //removes only from table, not from internal list causing a bug (found in search after delete)
                                        button.parents("tr").remove();

                                        /*Following line from Mosh's tutorial isn't working (so the uncommenting the above and bug remains)*/
                                        //table.row(button.parents("tr")).remove().draw();


                                    }
                                });
                            }
                        });


                    /*if (confirm("Are you sure you want to delete this customer?")) {
                        $.ajax({
                            url: "/api/customers/" + $(this).attr("data-customer-id"),
                            method: "DELETE",
                            success: function() {
                                button.parents("tr").remove();
                            }
                        });
                    }*/
                });
        });
    </script>
}

